@model SIPCA.CLASES.Models.Pedido

@{
    ViewBag.Title = "Edit";
}

<div id="pedidoDetaModal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="pedidoDetaModalContent"></div>
        </div>
    </div>
</div>

<h2>Edit</h2>


<div class="ibox float-e-margins">
    <div class="ibox-title">
        <div class="ibox-tools">
            <a class="collapse-link">
                <i class="fa fa-chevron-up"></i>
            </a>
            <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                <i class="fa fa-wrench"></i>
            </a>
            <ul class="dropdown-menu dropdown-user">
                <li>
                    <a href="#">Config option 1</a>
                </li>
                <li>
                    <a href="#">Config option 2</a>
                </li>
            </ul>
            <a class="close-link">
                <i class="fa fa-times"></i>
            </a>
        </div>
    </div>

    <div class="ibox-content css-animation-box">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Pedido</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.IdPedido)

                <div class="form-group">
                    @Html.LabelFor(model => model.NPedido, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NPedido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NPedido, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ClienteId, "ClienteId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ClienteId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TipoEntregaId, "TipoEntregaId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TipoEntregaId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TipoEntregaId, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="row">
                    <div class="col-md-offset-2 col-md-10">
                        @{Html.RenderAction("Index", "DetallePedidoes", new { pedidoId = Model.IdPedido });}
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control total" } })
                        @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>

                            }
    </div>
</div>


     @section Scripts {
    <script src="~/Scripts/Pedido.js"></script>
    }
